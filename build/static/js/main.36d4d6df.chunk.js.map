{"version":3,"sources":["components/Navbar/Navbar.module.scss","components/Main/index.js","components/Main/Main.jsx","components/Navbar/index.js","components/Navbar/Navbar.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Main","results","useState","beers","setBeers","JSON","stringify","useEffect","fetch","then","response","json","console","log","map","beer","name","tagline","src","image_url","description","Navbar","beerString","React","searchTerm","setSearchTerm","filter","toLowerCase","includes","toLocaleLowerCase","className","type","id","placeholder","value","onChange","event","target","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wJACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,4B,oICA/CC,ECKF,SAACC,GAAa,IAAD,EACIC,mBAAS,IADb,mBACfC,EADe,KACRC,EADQ,KAEHC,KAAKC,UAAUL,GAa5B,OAZNM,qBAAU,WAENC,MAAM,oCACLC,MAAM,SAAAC,GACH,OAAOA,EAASC,UAEnBF,MAAM,SAAAC,GAEH,OADAE,QAAQC,IAAIH,GACLN,EAASM,QAEf,IAGD,8BACKP,EAAMW,KAAI,SAACC,GACR,OAAO,+BACH,6BAAKA,EAAKC,OACV,6BAAKD,EAAKE,UACV,6BACI,qBAAKC,IAAKH,EAAKI,cAEnB,6BAAKJ,EAAKK,uBC5BnBC,ECGA,SAAClB,EAAOY,EAAMO,GAAgB,IAAD,EAEJC,IAAMrB,SAAS,IAFX,mBAEjCsB,EAFiC,KAErBC,EAFqB,KAOlCxB,EAAWuB,EACLF,EAAWI,QAAO,SAAAJ,GAAU,OAAIA,EAAWK,cAAcC,SAASJ,EAAWK,wBAAnF1B,EAGN,OACI,0BAAS2B,UAAU,SAAnB,UACA,sBAAKA,UAAU,YAAf,UACI,uBAAOC,KAAK,OACZf,KAAK,YACLgB,GAAG,YACHC,YAAY,eACZC,MAAOV,EACPW,SAhBa,SAAAC,GACjBX,EAAcW,EAAMC,OAAOH,UAgBvB,+BACY,6BAAKjC,EAAQe,OACb,6BAAKf,EAAQgB,UACb,6BACI,qBAAKC,IAAKjB,EAAQkB,cAEtB,6BAAKlB,EAAQmB,oBAG7B,qBAAKU,UAAU,aAAf,SACI,+BACI,0CACA,0CACA,mDCzBDQ,MATf,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.36d4d6df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__EQ-6F\",\"searchBox\":\"Navbar_searchBox__2s_G5\"};","import Main from './Main.jsx';\r\nexport default Main;","import React from 'react'\r\nimport styles from './Main.module.scss'\r\nimport { useState, useEffect } from 'react';\r\nimport searchTerm from '../Navbar'\r\nimport '../Navbar'\r\n\r\nconst Main = (results) => {\r\n    const [beers, setBeers] = useState([])\r\n    const beerString = JSON.stringify(results)\r\n    useEffect(() => {\r\n        // 1. This code only ever gets run once, and never again!\r\n        fetch(`https://api.punkapi.com/v2/beers`)\r\n        .then((response => {\r\n            return response.json()\r\n        }))\r\n        .then((response => {\r\n            console.log(response)\r\n            return setBeers(response)\r\n        }))\r\n          }, [])\r\n\r\n          return (\r\n            <div>\r\n                {beers.map((beer) => {\r\n                    return <ul>\r\n                        <li>{beer.name}</li>\r\n                        <li>{beer.tagline}</li>\r\n                        <li>\r\n                            <img src={beer.image_url}/>\r\n                        </li>\r\n                        <li>{beer.description}</li>\r\n                    </ul>\r\n                })}\r\n            </div>\r\n            \r\n        )\r\n        }\r\n\r\n    \r\n          \r\n\r\n    \r\n\r\nexport default Main\r\n\r\n","import Navbar from './Navbar.jsx';\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport styles from './Navbar.module.scss';\r\nimport Main from '../Main';\r\nimport { useState } from 'react';\r\n\r\nconst Navbar = (beers, beer, beerString) => {\r\n\r\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n    const handleChange = event => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const results = !searchTerm\r\n        ? beers:beerString.filter(beerString => beerString.toLowerCase().includes(searchTerm.toLocaleLowerCase())\r\n        );\r\n\r\n    return (\r\n        <section className=\"Navbar\">\r\n        <div className=\"searchBox\">\r\n            <input type=\"text\"\r\n            name=\"searchBar\"\r\n            id=\"searchBar\"\r\n            placeholder=\"Find a Beer!\"\r\n            value={searchTerm}\r\n            onChange={handleChange} />\r\n            <ul>\r\n                        <li>{results.name}</li>\r\n                        <li>{results.tagline}</li>\r\n                        <li>\r\n                            <img src={results.image_url}/>\r\n                        </li>\r\n                        <li>{results.description}</li>\r\n                    </ul>\r\n        </div>\r\n        <div className=\"filterList\">\r\n            <ul>\r\n                <li>Filter 1</li>\r\n                <li>Filter 2</li>\r\n                <li>Filter 3</li>\r\n            </ul>\r\n        </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import './App.module.scss';\nimport Navbar from './components/Navbar'\nimport Main from './components/Main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}